from aiogram import Bot, Dispatcher, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message, CallbackQuery
from aiogram.filters import CommandStart
import os
import dotenv

dotenv.load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot=bot)

support_button = InlineKeyboardButton(
    text="–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
    url="https://t.me/MuzzyExtrePC"
    )

big_button_1 = InlineKeyboardButton(
    text='–ü—Ä–æ—Ñ–∏–ª—å üë§',
    callback_data='profile_button_pressed'
)

big_button_2 = InlineKeyboardButton(
    text='–ó–∞–∫–∞–∑—ã ‚úÖ',
    callback_data='orders_button_pressed'
)

big_button_3 = InlineKeyboardButton(
    text='–ü–æ–¥–¥–µ—Ä–∂–∫–∞ üìû',
    callback_data='support_button_pressed'
)
back_button = InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_menu")
back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button]])
support_back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[support_button],
                                                               [back_button]])

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
keyboard = InlineKeyboardMarkup(inline_keyboard=[[big_button_1], [big_button_2], [big_button_3]])


@dp.message(CommandStart())
async def process_start_command(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'
    await message.answer(
        text='–ë—Ä–æ —ç—Ç–æ —Ç–≤–æ–µ –º–µ–Ω—é!',
        reply_markup=keyboard
    )
    if user_id != ADMIN_ID:
        await bot.send_message(ADMIN_ID, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} ({user_id}) –Ω–∞—á–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞")

@dp.callback_query(lambda query: query.data == 'profile_button_pressed')
async def process_button_1_press(callback: CallbackQuery):
    user_id = callback.from_user.id
    username = callback.from_user.username or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'
    await callback.message.edit_text(
        text='üíº–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n'
             '‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
             f'üÜî: {user_id}\n'
             f'üë§–ò–º—è: {username}\n'
             '‚úÖ–ó–∞–∫–∞–∑—ã: 0\n',
        reply_markup=back_keyboard
    )


@dp.callback_query(lambda query: query.data == 'support_button_pressed')
async def process_button_3_press(callback: CallbackQuery):
    await callback.message.edit_text(
        text='‚òéÔ∏è –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Å–≤—è–∑–∏ —Å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.',
        reply_markup=support_back_keyboard
    )
@dp.callback_query(lambda query: query.data == 'back_to_menu')
async def process_back_button(callback_query: CallbackQuery):
    await callback_query.message.edit_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é.", reply_markup=keyboard)



if __name__ == '__main__':
    dp.run_polling(bot)